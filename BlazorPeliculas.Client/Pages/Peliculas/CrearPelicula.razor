@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IHttpServicio httpServicio
@inject SweetAlertService swal

<h3>Crear Película</h3>

@if (MostrarFormulario)
{
	<FormularioPeliculas Pelicula="Pelicula" OnValidSubmit="Crear"
	GenerosNoSeleccionados="GenerosNoSeleccionados"></FormularioPeliculas>
}
else
{
	<p>Cargando...</p>
}




@code {
	private PeliculaDTO Pelicula = new PeliculaDTO();
	private List<GeneroDTO> GenerosNoSeleccionados = new List<GeneroDTO>();
	public bool MostrarFormulario { get; set; } = false;

	protected async override Task OnInitializedAsync()
	{
		var respuestaHTTP = await httpServicio.Get<List<GeneroDTO>>("api/generos");
		GenerosNoSeleccionados = respuestaHTTP.Respuesta;
		MostrarFormulario = true;
	}

	async Task Crear()
	{
		var httpResponse = await httpServicio.Post("api/peliculas", Pelicula);

		if (httpResponse.Error)
		{
			var mensajeError = await httpResponse.ObtenerError(); // Obtener el mensaje del servidor
			await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
		}
		else
		{
			var peliculaId = httpResponse.Respuesta;
			navigationManager.NavigateTo($"/pelicula/{peliculaId}/{Pelicula.Nombre.Replace(" ", "-")}");
		}
	}
}
