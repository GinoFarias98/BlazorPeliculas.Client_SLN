@page "/generos/editar/{GeneroId:int}"
@inject NavigationManager navigationManager
@inject IHttpServicio httpServicio
@inject SweetAlertService swal

<h3>Editar Género</h3>

@if (Genero is null)
{
	<p>Cargando...</p>
}
else
{
	<FormulariosGenero @ref="formularioGenero" Genero="Genero" OnValidSubmit="Editar" />
}


@code {
	[Parameter]
	public int GeneroId { get; set; }

	private Genero? Genero;
	private FormulariosGenero? formularioGenero;

	protected override async Task OnInitializedAsync()
	{
		var respuestaHTTP = await httpServicio.Get<Genero>($"api/generos/{GeneroId}");

		if (respuestaHTTP.Error)
		{
			if (respuestaHTTP.httpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
			{
				navigationManager.NavigateTo("generos");
			}
			else
			{
				var mensajeError = await respuestaHTTP.ObtenerError(); // Obtener el mensaje del servidor
				await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);

			}
		}
		else
		{
			Genero = respuestaHTTP.Respuesta;
		}

	}

	private async Task Editar()
	{
		var respuestaHTTP = await httpServicio.Put("api/generos", Genero);

		if (respuestaHTTP.Error)
		{
			var mensajeError = await respuestaHTTP.ObtenerError(); // Obtener el mensaje del servidor
			await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
		}
		else
		{
			formularioGenero!.FormularioPosteadoConExito = true;
			navigationManager.NavigateTo("generos");

		}
	}
}