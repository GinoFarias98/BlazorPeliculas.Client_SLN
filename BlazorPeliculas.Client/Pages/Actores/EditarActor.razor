@page "/actores/editar/{ActorId:int}"
@inject NavigationManager navigationManager
@inject IHttpServicio httpServicio
@inject SweetAlertService swal

<h3>Editar Actor</h3>

@if (Actor is null)
{
	<p>Cargando...</p>
}
else
{
	<FormularioActores OnValidSubmit="Editar" Actor="Actor" />
}

@code {
	[Parameter]
	public int ActorId { get; set; }

	Actor? Actor;

	protected override async Task OnInitializedAsync()
	{
		var respuestaHTTP = await httpServicio.Get<Actor>($"api/actores/{ActorId}");

		if (respuestaHTTP.Error)
		{
			if (respuestaHTTP.httpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
			{
				navigationManager.NavigateTo("actores");
			}
			else
			{
				var mensajeError = await respuestaHTTP.ObtenerError(); // Obtener el mensaje del servidor
				await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);

			}
		}
		else
		{
			Actor = respuestaHTTP.Respuesta;
		}

	}

	private async Task Editar()
	{
		var respuestaHTTP = await httpServicio.Put("api/actores", Actor);

		if (respuestaHTTP.Error)
		{
			var mensajeError = await respuestaHTTP.ObtenerError(); // Obtener el mensaje del servidor
			await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
		}
		else
		{			
			navigationManager.NavigateTo("actores");
		}
	}

}
